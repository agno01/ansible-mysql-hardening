---
sudo: required

env:
  - distribution: centos
    version: 6
    init: /sbin/init
    run_opts: ""
    playbook: default.yml
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
    playbook: default.yml
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
    playbook: default.yml
#  - distribution: ubuntu
#    version: 12.04
#    init: /sbin/init
#    run_opts: ""
#    playbook: default.yml
  - distribution: ubuntu
    version: 16.04
    init: /sbin/init
    run_opts: ""
    playbook: default.yml
  - distribution: debian
    version: 7
    init: /sbin/init
    run_opts: ""
    playbook: default.yml

  - distribution: debian
    version: 8
    init: /sbin/init
    run_opts: ""
    playbook: default.yml

services:
  - docker

before_install:
  # Pull container
  - 'sudo docker pull ${distribution}:${version}'
  # Customize container
  - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
  - container_id=$(mktemp)
    # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/mysql-hardening:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'

  # install mysql role
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-galaxy install -r /etc/ansible/roles/mysql-hardening/spec/requirements.yml -p /etc/ansible/roles/'
  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/mysql-hardening/${playbook} --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/mysql-hardening/${playbook}'

  # Test role idempotence.
#  - >
#    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/mysql-hardening/${playbook}
#    | grep -q 'changed=0.*failed=0'
#    && (echo 'Idempotence test: pass' && exit 0)
#    || (echo 'Idempotence test: fail' && exit 1)

  # Some MySQL debugging (show all the logs).
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ls -lah /var/log
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /var/log/mysql/error.log || true
  - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm cat /var/log/mysql.err || true

  # run tests
  # - sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm bundle exec inspec exec /etc/ansible/roles/mysql-hardening/test/integration/default/inspec/

  # Clean up
  - sudo docker stop "$(cat ${container_id})"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/

